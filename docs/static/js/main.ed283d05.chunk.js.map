{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categos","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACC,sBAAMC,SAXc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAO,OAAKP,GAAL,mBAAmBO,OACzCN,EAAc,MAMf,SACC,uBACCO,KAAK,OACLC,MAAQT,EACRU,SAnBuB,SAACP,GAC1BF,EAAeE,EAAEQ,OAAOF,a,QCNbG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAErC,OACE,sBAAKC,UAAU,2BAAf,UACC,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAKA,Q,uBCPIK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,0FACwEO,UAAUF,GADlF,sBAEHG,MAAMR,GAFH,cAEhBS,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAM,CACLhB,GAAGgB,EAAIhB,GACPC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARd,kBAYfY,GAZe,4CAAH,sDCOPK,EAAU,SAAC,GAAmB,IAAhBZ,EAAe,EAAfA,SAE1B,ECN2B,SAAEA,GAC7B,MAAyBrB,mBAAS,CAAC2B,KAAK,GAAGO,SAAQ,IAAnD,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,qBAAW,WACVjB,EAASC,GACRiB,MAAM,SAAAC,GAENC,YAAY,WAEXJ,EAAS,CACPT,KAAKY,EACLL,SAAQ,MAGT,UAIF,CAAEb,IAEGc,EDd0BM,CAAcpB,GAAlCU,EAAb,EAAQJ,KAAcO,EAAtB,EAAsBA,QAItB,OACC,qCACC,qBAAIjB,UAAU,sBAAd,cAAuCI,EAAvC,OACEa,GAAW,wCAGb,qBAAKjB,UAAU,YAAf,SAEEc,EAAOF,KAAK,SAAAC,GAAG,OACd,cAAC,EAAD,eAEQA,GADAA,EAAIhB,aEnBL4B,EAAe,WAI3B,MAAqC1C,mBAAS,CAAC,cAA/C,mBAAQ2C,EAAR,KAAoB5C,EAApB,KAEA,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEE4C,EAAWd,KAAK,SAAAR,GACf,OAAQ,cAAC,EAAD,CAELA,SAAUA,GADFA,Y,MCfjBuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed283d05.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategorias} ) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue( e.target.value )\r\n\t}\r\n\r\n\tconst handleSubmit = (e)=>{\r\n\t\te.preventDefault();\r\n\r\n\t\tif( inputValue.trim().length > 2 ){\r\n\t\t\tsetCategorias( categos => [inputValue,...categos])\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={ handleSubmit }>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tvalue={ inputValue }\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategorias: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\t\r\n\treturn (\r\n\t\t\t<div className=\"card animate__fadeInDown\">\r\n\t\t\t\t<img src={url} alt={title} />\r\n\t\t\t\t<p>{ title }</p>\r\n\t\t\t</div>\r\n\t\t)\r\n}","export const getGifs = async( category ) =>{\r\n\tconst url =`https://api.giphy.com/v1/gifs/search?api_key=MkuK2D6khJz3bGU00PVrn7E679JwPH3t&q=${encodeURI(category)}&limit=10`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\tconst gifs = data.map(img => {\r\n\t\treturn{\r\n\t\t\tid:img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t}\r\n\t})\r\n\r\n\treturn gifs;\r\n}","// import React,{useState, useEffect} from 'react';\r\nimport React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ( { category } ) =>{\r\n\t\r\n\tconst { data:images , loading} = useFetchGifs( category );\r\n\r\n\t// console.log(data);\r\n\r\n\treturn(\r\n\t\t<>\t\r\n\t\t\t<h3 className=\"animate__fadeInDown\"> { category } </h3>\r\n\t\t\t{ loading && <p>Loading</p> }\r\n\t\t\t{\r\n\t\t\t\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map( img => (\r\n\t\t\t\t\t\t<GifGridItem \r\n\t\t\t\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\t\t\t\t{ ...img } \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\tconst [state,setState] = useState({data:[],loading:true});\r\n\r\n\tuseEffect( ()=>{\r\n\t\tgetGifs( category )\r\n\t\t.then( imgs =>{\r\n\r\n\t\t\tsetTimeout( ()=>{\r\n\t\t\t\t\r\n\t\t\t\tsetState({\r\n\t\t\t\t\t\tdata:imgs,\r\n\t\t\t\t\t\tloading:false\r\n\t\t\t\t\t})\r\n\r\n\t\t\t},3000);\r\n\t\t\t\r\n\t\t});\r\n\r\n\t},[ category ])\r\n\r\n\treturn state;\r\n}\r\n\r\n","import React,{ useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n\t// const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n\r\n\tconst [ categorias, setCategorias] = useState(['One Punch']);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategorias={ setCategorias } />\r\n\t\t\t<hr />\r\n\t\t\t\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategorias.map( category => {\r\n\t\t\t\t\t\treturn (<GifGrid \r\n\t\t\t\t\t\t\t\t\tkey = { category }\r\n\t\t\t\t\t\t\t\t\tcategory={category} \r\n\t\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}